{"version":3,"sources":["Components/Quiz.module.css","Components/Dispquestion.js","Components/Assets/back.svg","Components/Assets/next.svg","Components/Quiz.js","App.js","store/Reducer.js","index.js","App.module.css"],"names":["module","exports","DispQuestions","props","index","problem","setUsersChoice","userChoice","question","choices","className","classes","Question","map","option","i","id","type","name","checked","onChange","htmlFor","Answers","toString","Timer","time","ProgressBar","max","value","color","connect","state","questions","quiz","useState","setTime","active","setActive","problems","setProblems","current","setCurrent","selected","setSelected","finishQuiz","score","length","correct","alert","window","location","reload","useEffect","setTimeout","q","ind","Math","floor","random","temp","randomShuffle","splice","Container","choice","t","Btns","Prev","data-visible","onClick","e","src","PreviousArrow","style","marginLeft","alt","Hide","Next","NextArrow","marginRight","Submit","App","begin","setBegin","Content","initialState","reducer","store","createStore","app","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a1da6366.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Quiz_Container__1Y6Ji\",\"ProgressBar\":\"Quiz_ProgressBar__1Gf98\",\"Timer\":\"Quiz_Timer__nkMKq\",\"Question\":\"Quiz_Question__XytnN\",\"Hide\":\"Quiz_Hide__26QlX\",\"Btns\":\"Quiz_Btns__1zruj\",\"Submit\":\"Quiz_Submit__Rp1cQ\"};","import React from 'react';\nimport classes from './Quiz.module.css';\n\n\nconst DispQuestions = (props) => {\n  const {index, problem , setUsersChoice, userChoice} = props;\n    if(!problem)\n  {\n    return <h1>Spinner</h1>;\n  }\n\n  const {question, choices} = problem;\n\n  return (\n    <>\n      <div className={classes.Question}>\n        <h3>{index + 1 + '. ' + question}</h3>\n      </div>\n      {choices.map((option, i) => (\n        <form key={i.toString()} >\n              <input\n                id={i}\n                type='radio'\n                name={'radio' + i}\n                checked={userChoice === i + 1}\n                onChange={() => {\n                  setUsersChoice(index, i + 1);\n                }}\n              />\n            <label htmlFor={i}>\n              <p className={classes.Answers}>{option}</p>\n            </label>\n        </form>\n      ))}\n      {/* {!active ? (\n        <Alert color='info'>\n          <b> Correct answer: </b> ({correct})\n          <br />\n          <b> Description: </b> ({desc})\n        </Alert>\n      ) : (\n        ''\n      )} */}\n    </>\n  );\n}\n\nexport default DispQuestions;","export default __webpack_public_path__ + \"static/media/back.a98e70f8.svg\";","export default __webpack_public_path__ + \"static/media/next.7568cec3.svg\";","import React, {useState, useEffect} from 'react';\nimport { connect } from 'react-redux';\n\nimport classes from './Quiz.module.css'\nimport DispQuestions from './Dispquestion';\nimport PreviousArrow from './Assets/back.svg';\nimport NextArrow from './Assets/next.svg'\n\n/* import questions from '../questions'; */\n\nconst randomShuffle = (q) => {\n  for(let i = q.length-1 ; i>0 ; i--)\n  {\n    let ind=Math.floor(Math.random()*(i+1));\n    let temp=q[i];\n    q[i]=q[ind];\n    q[ind]=temp;\n  }\n  return q;\n}\n\nconst Timer = (props) => {\n  const {time} = props;\n  return (\n    <>\n      <p className={classes.ProgressBar}>\n        {time===0\n        ?\"Time's up !!\"\n        :time+\" seconds left\"}\n        </p>\n      <progress max={100} value={100-time} color=\"danger\"/>\n    </>\n  );\n}\n\n\nconst Quiz = (props) => {\n  const [time, setTime] = useState(100); // time remaining;\n  const [active, setActive] = useState(true); // sate of the quiz;\n  const [problems, setProblems] = useState(null);\n  const [current, setCurrent] = useState(0);\n  const [selected, setSelected] = useState([]);\n\n  const finishQuiz = (props) => {\n    setActive(false);\n    let score=0;\n    for(let i=0; i<problems.length; i++){\n        if(problems[i].correct===selected[i]){\n          score+=10;\n        }\n      }\n      alert('Congrats! Your score is'+score+\" out of 100\");\n      window.location.reload(false);\n      /* setTimeout(() => {\n      }, 1000); */\n    }\n    \n  /* const refreshPage = () => {\n      window.location.reload(false);\n  } */\n\n  const setUsersChoice = (index, choice) => {\n    let t=selected;\n    t[index]=choice;\n    setSelected(t);\n  }\n  \n  useEffect(() => {\n    if (time === 0) {\n      finishQuiz();\n    }\n    if(time!==0)\n    {\n      setTimeout(() => {\n        setTime(time - 1);\n      }, 1000);\n    }\n  }, [time]);\n  \n  useEffect(() => {\n    setProblems(randomShuffle(props.questions).splice(0,10));\n  },[]);\n  \n  return (\n    <div className={classes.Container}>\n     \n        \n          <Timer time={time} />\n          <br />\n          <DispQuestions\n            index={current}\n            problem={!problems ? null : problems[current]}\n            active={active}\n            userChoice={selected[current]}\n            setUsersChoice={setUsersChoice}\n          />\n          <div className={classes.Btns}>\n            <div className={classes.Prev}>\n              {current !== 0 ? (\n                <>\n                  <button\n                    data-visible={toString(current !== 0)}\n                    color='info'\n                    onClick={(e) => {\n                      setCurrent(current - 1);\n                    }}\n                  >\n                    <img src={PreviousArrow} style={{marginLeft: '-4px'}} alt=\"Prev\" />\n                  </button>{/* {' '} */}\n                </>\n              ) : (\n                <button className={classes.Hide}><img src={PreviousArrow} style={{marginLeft: '-4px'}} alt=\"Prev\" /></button>\n              )}\n            </div>\n            <div className={classes.Next}>\n              {current !== 9 ? (\n                <>\n                  <button\n                    color='info'\n                    onClick={(e) => {\n                      setCurrent(current + 1);\n                    }}\n                  >\n                    <img src={NextArrow} style={{marginRight: '-4px'}} alt=\"Next\" />\n                  </button>{' '}\n                </>\n              ) : (\n                <button className={classes.Hide}><img src={NextArrow} style={{marginRight: '-4px'}} alt=\"Next\" /></button>\n                )}\n            </div>\n          </div>\n            <div className={classes.Submit}>\n              {\n                current === 9 ? (\n                  <button\n                    color='info'\n                    onClick={() => {\n                      finishQuiz();\n                    }} \n                  >\n                    SUBMIT\n                  </button>\n                \n                ):( \" \" )\n              }\n            </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    questions: state.quiz\n  }\n}\n\nexport default connect(mapStateToProps)(Quiz);","import React, { useState } from 'react';\n\nimport Quiz from './Components/Quiz';\nimport classes from './App.module.css';\n\nconst App = () => {\n\n  const [begin, setBegin] = useState(false)\n  \n  const beginhandler = () => {\n    setBegin(true)\n  }\n\n  return (\n    <div className={classes.App}>\n      <div className={classes.Container}>\n        {!begin ? \n          <div className={classes.Content}>\n            <h1>Do you want to begin with the QUIZ ?</h1>\n            <button onClick={beginhandler} >START</button>\n          </div>\n          \n          :\n          <Quiz/>\n        }\n      </ div> \n    </div>\n  );\n}\n\nexport default App;\n","const initialState = {\n    quiz: [\n\t\t{\n\t\t  question: 'Where is Taj Mahal Located?',\n\t\t  choices: ['Mumbai', 'Agra', 'New Delhi', 'None of these'],\n\t\t  correct: 2,\n\t\t},\n\t\t{\n\t\t  question: 'What color does yellow and green make?',\n\t\t  choices: ['Lime', 'Ocean mist', 'Maroon', 'Tangerine'],\n\t\t  correct: 1,\n\t\t},\n\t\t{\n\t\t  question: 'The hottest planet in the solar system?',\n\t\t  choices: ['Mercury', 'Venus', 'Mars', 'Jupiter'],\n\t\t  correct: 1,\n\t\t},\n\t\t{\n\t\t  question: \"'www' stands for:\",\n\t\t  choices: ['World Wide Web', 'World Wide Wares', 'World Wide Wait', 'World Wide War'],\n\t\t  correct: 1,\n\t\t},\n\t\t{\n\t\t  question: 'Which is the first smart city in world?',\n\t\t  choices: ['New Jersey', 'Seoul', 'Vatican City', 'California'],\n\t\t  correct: 2,\n\t\t},\n\t\t{\n\t\t  question: 'Where is Gateway of India Located?',\n\t\t  choices: ['Mumbai', 'Chennai', 'New Delhi', 'Hyderabad'],\n\t\t  correct: 1,\n\t\t},\n\t\t{\n\t\t  question: 'Which one of the following ports is the oldest port in India?',\n\t\t  choices: ['Mumbai Port', 'Chennai Port', 'Kolkata Port', 'Vishakhapatnam Port'],\n\t\t  correct: 2,\n\t\t},\n\t\t{\n\t\t  question: 'Which is the tallest waterfalls in the world ?',\n\t\t  choices: ['Jog Falls', 'Tugela Falls', 'Angel Falls', 'Victoria Falls'],\n\t\t  correct: 3,\n\t\t},\n\t\t{\n\t\t  question: \"Which of the following is called 'the Land of Rising Sun' ?\",\n\t\t  choices: ['India', 'China', 'U.S.A', 'Japan'],\n\t\t  correct: 4,\n\t\t},\n\t\t{\n\t\t  question: 'Which is the southernmost point of India?',\n\t\t  choices: ['Siachin', 'Indira Point', 'Thiruvananthapuram', 'Kanyakumari'],\n\t\t  correct: 2,\n\t\t},\n\t\t{\n\t\t  question: 'For which of the following disciplines is Nobel Prize awarded?',\n\t\t  choices: ['Literature, Peace and Economics', 'Physics and Chemistry', 'Physiology or Medicine', 'All of the above'],\n\t\t  correct: 4,\n\t\t},\n\t\t{\n\t\t  question: 'The United Nations Organization has its Headquarters at ',\n\t\t  choices: ['Bali', 'Hague', 'New York, USA', 'Washington DC'],\n\t\t  correct: 3,\n\t\t},\n\t\t{\n\t\t  question: ' Objects at the surface of water can be viewed from a submarine under water by using which instrument ?',\n\t\t  choices: ['Stethescope', 'Periscope', 'Kaleidoscope', 'Telescope'],\n\t\t  correct: 2,\n\t\t},\n\t\t{\n\t\t  question: \"Who created the famous Rock Garden of Chandigarh ?\",\n\t\t  choices: ['Gaudi', 'Saarinen', 'Krishnarao Jaisim', 'Nek Chand'],\n\t\t  correct: 4,\n\t\t},\n\t\t{\n\t\t  question: \"NASA’s most famous space telescope goes by the name?\",\n\t\t  choices: ['Muble Satellite Telescope', ' Hubble Space Telescope', 'Humble Space Telescope', 'Galaxy Satellite Telescope'],\n\t\t  correct: 2,\n\t\t},\n\t\t{\n\t\t  question:\t\"At room temperature, which is the only metal that is in liquid form?\",\n\t\t  choices: ['Iron', 'Aluminum', 'Mercury', 'Silver'],\n\t\t  correct: 3,\n\t\t},\n\t\t{\n\t\t  question: 'The tropic of cancer does not pass through which of these Indian states ?',\n\t\t  choices: ['Madhya Pradesh', 'West Bengal', 'Rajasthan', 'Odisha'],\n\t\t  correct: 4,\n\t\t},\n\t\t{\n\t\t  question: 'In which of the following festivals are boat races a special feature?',\n\t\t  choices: ['Rongali Bihu ', 'Onam', 'Pongal', 'Navratri'],\n\t\t  correct: 2,\n\t\t},\n\t\t{\n\t\t  question: 'The blue colour of the clear sky is due to',\n\t\t  choices: ['Diffraction of light', 'Dispersion of light', 'Reflection of light', 'Refraction of light'],\n\t\t  correct: 2,\n\t\t},\n\t]\n\n}\n\nconst reducer = (state= initialState, action) => {\n\n\treturn state;\n\t\n}\n\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\n\nimport './index.css';\nimport App from './App';\nimport reducer from './store/Reducer';\n//import reportWebVitals from './reportWebVitals';\n\nconst store = createStore (reducer)\n\nconst app = (\n  <Provider store={store}>\n    <App />\n  </Provider>\n)\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__16ZpL\",\"Container\":\"App_Container__10KOh\",\"Content\":\"App_Content__ZaMNr\"};"],"sourceRoot":""}